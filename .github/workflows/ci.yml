name: ci
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  push:
    tags:
      - "*"
    branches:
      - master
      - develop
      - "release/*"
      - "hotfix/*"
  pull_request:
    branches-ignore:
      - "docs/*"
      - "doc/*"


jobs:
  test:
    runs-on: '${{ matrix.os }}'
    container: rootproject/root:6.20.08-ubuntu20.04
    strategy:
      fail-fast: False
      matrix:
        os: [ ubuntu-latest ]
        python-version:
          - '3.6'
          - '3.7'
          - '3.8'
          - '3.9'
    steps:
#      - name: Install dependencies (Ubuntu)
#        run: apt install -y gfortran libatlas-base-dev liblapack-dev build-essential
#      - name: 'Set up Python ${{ matrix.python-version }}'
#        uses: actions/setup-python@v2
#        with:
#          python-version: '${{ matrix.python-version }}'
      - uses: actions/checkout@v2
#      - run: >-
#          wget
#          https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
#          -O anaconda.sh > tmp.txt && echo "alive";
      - uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.python-version }}
          mamba-version: "latest"
          channels: conda-forge,defaults
          channel-priority: true
          activate-environment: condaenv
      - shell: bash -el {0}
        run: |
          mamba install future -y
          pip install .[root]
#          mamba install "root<6.22.0" future -y
      - shell: bash -el {0}
        run: pytest
#      - run: bash anaconda.sh -b -p $HOME/anaconda > tmp.txt && echo "alive"
#      - run: 'export PATH="$HOME/anaconda/bin:$PATH"'
#      - run: conda config --set always_yes yes --set changeps1 no
#      - run: conda config --add channels conda-forge
#      - run: >-
#          conda create -q --name=raredecay-env python=$TRAVIS_PYTHON_VERSION
#          root > tmp.txt && echo "alive"
#      - run: source activate raredecay-env
#      - run: conda install -y coverage > tmp.txt && echo "alive"
#      - run: conda install -y future > tmp.txt && echo "alive"
#      - run: pip install coveralls > tmp.txt && echo "alive"
#      - run: 'pip install .[all]'
#      - run: coverage run -m unittest discover
#      - run: coverage run --branch -m unittest discover
#      - run: coveralls
